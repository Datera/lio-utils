#!/usr/bin/make -f

build_dir   = build
install_dir = debian/lio-utils
setup = /usr/bin/python ./setup.py

CWD=$(shell pwd)

binary: binary-indep

binary-arch:

binary-indep: build install
	dh_testdir
	dh_testroot
#	dh_installchangelogs 
#	dh_installdocs
#	dh_installman
	dh_installinit --name target
#	dh_install --list-missing --sourcedir $(install_dir)
	dh_fixperms
	dh_compress -X.py
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

install: build
	dh_testdir
	dh_testroot
	dh_installdirs 

       # Add here commands to install the package into debian/target.
	$(MAKE) DESTDIR=$(CURDIR)/debian/lio-utils conf_install;	\
	if [ -d tools ]; then	\
		$(MAKE) DESTDIR=$(CURDIR)/debian/lio-utils -C tools install; \
        fi
	if [ -d mib-modules ]; then	\
		$(MAKE) DESTDIR=$(CURDIR)/debian/lio-utils -C mib-modules install;	\
	fi

build: build-stamp
build-stamp: 
	dh_testdir
	$(MAKE) DESTDIR=$(CURDIR)/debian/lio-utils -C tools
	cd tcm-py ; $(setup) build --build-base build/tcm-py/ install --no-compile --root=$(CWD)/debian/lio-utils/
#	echo "2.5, 2.6" > $(install_dir)/lib/pylio/.version
	cd lio-py ; $(setup) build --build-base build/lio-py/ install --no-compile --root=$(CWD)/debian/lio-utils/
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	find . -name "*.pyc" | xargs rm -f
	find . -name "*.pyo" | xargs rm -f
	rm -rf $(build_dir) $(install_dir)
	dh_clean

.PHONY: binary binary-indep install build clean

